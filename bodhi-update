#!/bin/bash
# This script shows an icon in the notification area indicating the staus of available updates for dpkg based system.
# The total quantity of updates and the quantity of security updates is shown.
# The icon colour and symbol indicate whether none, only non-security or security updates are available.
# Right click to show context menu allowing installation of updates.
# Relies on background task to periodically query for updates, e.g. cron job performing apt update
#
# Dependencies: yad terminology awk bash apt apt-get

VERSION=0.3

# Seconds between refreshing icon
REFRESH_PERIOD=600

#TODO

ICON_SECURITY=software-update-urgent
ICON_NORMAL=software-update-available
ICON_NOUPDATES=dialog-information
ICON_REFRESHING=dialog-question
ICON_REBOOT=reboot-notifier
MENU_TEMPLATE="Refresh status!echo refresh|About!echo about|Quit!echo quit"
MENU_SHOW_NOUPDATE="Hide when no updates available!echo toggle_show"
SHOW_NOUPDATES=1
#if [ -f ~/.config/bodhi-update.conf ]
#then
#  SHOW_NOUPDATES=0
#fi

# Try to stop any existing running instances
# Actually want to signal to existing instance to show icon so that config can be performed
for pid in $(pgrep -u $USER bodhi-update | grep -v $$)
do
  kill $pid > /dev/null 2>&1
done

# Create a pipe for control of yad
PIPE1=$(mktemp -u --tmpdir "${0##*/}.XXXXXXXX")
mkfifo "$PIPE1"
# Add descriptor to pipe
exec 3<> "$PIPE1"
# Create a pipe for control of bodhi-update
PIPE2=$(mktemp -u --tmpdir "${0##*/}.XXXXXXXX")
mkfifo "$PIPE2"
# Add descriptor to pipe
exec 4<> "$PIPE2"

# Function to run on exit
function on_exit() {
  echo "quit" >&3
  rm -f "$PIPE1"
  rm -f "$PIPE2"
  rm -f /tmp/rdup
}

# Function to run on USR1 signal
function on_usr1() {
	SHOW_NOUPDATES=1
}

# Register for exit signal
trap on_exit EXIT
trap on_usr1 SIGUSR1

# Launch notification handler
yad --no-middle --notification --listen --image $ICON_REFRESHING --text="Checking for updates..." <&3 > /proc/$$/fd/4 &
while true
do
    # Check if reboot required
    if [ -f /var/run/reboot-required ]
    then
        echo "tooltip:Reboot required" >&3
        echo "icon:$ICON_REBOOT" >&3
        echo "menu:Reboot!echo reboot|$MENU_TEMPLATE|$MENU_SHOW_NOUPDATE" >&3
    else
        # Refresh update status from apt cache
        echo "tooltip:Checking for updates..." >&3
        echo "icon:$ICON_REFRESHING" >&3
        apt list --upgradeable | grep -v ^Listing...$ | awk '{print $1}' > /tmp/rdup
        security=$(grep -c security /tmp/rdup)
        total=$(wc -l < /tmp/rdup)

        # Update systray icon
        if [ "$security" -gt 0 ]
        then
            echo "icon:$ICON_SECURITY" >&3
            echo "tooltip:$total updates available ($security security updates)" >&3
            echo "menu:Check for new updates!echo update|Show $total available updates!echo show|Install updates!echo upgrade|$MENU_TEMPLATE||$MENU_SHOW_NOUPDATE" >&3
            echo "action:echo show" >&3
            echo "visible:true" >&3
        elif [ "$total" -gt 0 ]
        then
            echo "icon:$ICON_NORMAL" >&3
            echo "tooltip:$total updates available" >&3
            echo "menu:Check for new updates!echo update|Show $total available updates!echo show|Install updates!echo upgrade|$MENU_TEMPLATE||$MENU_SHOW_NOUPDATE" >&3
            echo "action:echo show" >&3
            echo "visible:true" >&3
        else
            echo "icon:$ICON_NOUPDATES" >&3
            echo "tooltip:System is up to date" >&3
            echo "action:" >&3
            echo "menu:Check for new updates!echo update|$MENU_TEMPLATE||$MENU_SHOW_NOUPDATE" >&3
            if [ $SHOW_NOUPDATES -eq 1 ]
            then
                echo "visible:true" >&3
            else
                echo "visible:false" >&3
            fi
        fi
    fi
    # Consume any commands recieved during previous processing
    read -rt 1 -N 10000 <&4
    # Wait for next command
    read -rt $REFRESH_PERIOD command <&4

    # Process command
    if [ " $command " == " update " ]
    then
        echo "tooltip:Checking for updates..." >&3
        echo "icon:$ICON_REFRESHING" >&3
	terminology -e pkexec apt update
        if [ "$total" -lt 1 ]
        then
            yad --title "Bodhi Update" --text "No updates available" --center --height 80 --width 225 --window-icon=system_section --button=Ok
        fi
    elif [ " $command " == " upgrade " ]
    then
        echo "icon:$ICON_REFRESHING" >&3
	terminology -e pkexec apt dist-upgrade -qy
    elif [ " $command " == " show " ]
    then
        yad --title "Available updates" --center --height 200 --window-icon=system_section --button=Cancel --button="Install updates":1 --list --column "Software package name" "$(awk -F'/' '{print $1}' /tmp/rdup)" > /proc/$$/fd/4
        if [ $? -eq 1 ]
        then
            echo "icon:$ICON_REFRESHING" >&3
            terminology -e pkexec apt dist-upgrade -qy
        fi
    elif [ " $command " == " quit " ]
    then
        break
    elif [ " $command " == " reboot " ]
    then
		#TODO Implement reboot
		reboot
	elif [ " $command " == " about " ]
	then
	    yad --title "About..." --center --button=Close --text "Bodhi-Update\n\nVersion: $VERSION\nCopyright: hippytaff (2023)\nMaintainer: Gareth Williams"
    elif [ " $command " == " toggle_show " ] # Fix before enabling - When Hide selected can not select show and doesn't show when updates available.
    then
		if [ $SHOW_NOUPDATES -eq 1 ]
		then

			SHOW_NOUPDATES=0
			MENU_SHOW_NOUPDATE="Show when no updates available!echo toggle_show"
			touch ~/.config/bodhi-update.conf
		else
			SHOW_NOUPDATES=1
			MENU_SHOW_NOUPDATE="Hide when no updates available!echo toggle_show"
			rm -rf ~/.config/bodhi-update.conf
		fi
    fi
done
